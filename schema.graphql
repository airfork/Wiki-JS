type User {
    username: String!
    admin: Boolean!
}

type PageImage {
    id: Int!
    fileInfo: File!
    url: String!
}

type Page {
    title: String!
    contents: String!
    createdAt: String!
    updatedAt: String!
    contributors: [User]!
    categories: [Tags]
    images: [PageImage]
}

type Tags {
    category: String!
}

type Image {
    id: Int!
    fileInfo: File!
    page: Page
    url: String!
}

type File {
    filename: String!
    mimetype: String!
    encoding: String!
}

type Query {
    getPage(title: String!): Page
    getCurrentUser: User
    getUsers: [User]!
    getImages: [Image]!
    getPages: [Page]!
}

scalar Upload

input UserInput {
    username: String!
    password: String!
}

input TagsInput {
    category: String!
}

input PageInput {
    title: String!
    contents: String!
    categories: [TagsInput!]
    imageIds: [Int!]
}

type Mutation {
    createPage(page: PageInput!): Page
    createImage(image: Upload!, linkedPageId: ID!): Image
    createUser(user: UserInput!): User
    deletePage(title: String!): Page
    deleteUser(username: String!): User
    logIn(username: String!, password: String!): String!
    makeAdmin(username: String!): User
}