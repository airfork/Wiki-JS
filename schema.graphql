type User {
    id: ID!
    username: String!
    admin: Boolean!
}

type Page {
    id: String!
    contents: String!
    createdAt: String!
    updatedAt: String!
    contributors: [User]!
    categories: [Tags]
    images: Image
}

type Tags {
    id: String!
    category: String!
}

type Image {
    id: String!
    data: File
    page: Page
}

type File {
    filename: String!
    mimetype: String!
    encoding: String!
}

type Query {
    users: [User]
    user(id: ID!): User
}

scalar Upload

input UserInput {
    username: String!
    password: String!
}

input TagsInput {
    category: String!
}

input PageInput {
    contents: String!
    categories: [TagsInput]
}

type Mutation {
    createPage(page: PageInput!): Page
    createImage(image: Upload!, linkedPageId: String!): Image
    createUser(user: UserInput!): User
    logIn(username: String!, password: String!): String!
}